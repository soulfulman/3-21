#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
//int main()
//{
//	int a = 5 / 2;
//	printf("a=%d", a);
//	return 0;
//}
//右移，移动二进制
//1.算术右移：右边丢弃，左边补原来的符号为（计算机采用）
//2.逻辑移位  右边丢弃，左边补0
//int main()
//{
//	int a = -1;
//	//整数二进制表达有源码反码补码，存储的是补码
//	//10000000000000000000000000000001 源码
//	//11111111111111111111111111111110 反码
//	//11111111111111111111111111111111 补码
//	int b = a >> 1;
//	printf("%d\n", b);
//	return 0;
//}
// 左移：左边丢弃，右边补0
//按位与
//int main()
//{
//	int a = 3;
//	int b = 5;
//	int c = a & b;
//	//00000000000000000000000000000011
//	//00000000000000000000000000000101
//	//00000000000000000000000000000001
//	printf("c=%d", c);
//	return 0;
//
//}
//按位或
//int main()
//{
//	int a = 3;
//	int b = 5;
//	int c = a & b;//a^b
//	//00000000000000000000000000000011
//	//00000000000000000000000000000101
//	//00000000000000000000000000000111 或
//	//00000000000000000000000000000110(异或)
//	printf("c=%d", c);
//	return 0;
//
//}
//不创建临时变量，交换两个数
//int main()
//{
//	int a = 3;
//	int b = 5;
//	//加减法   可能会溢出
//	a = a + b;
//	b = a - b;
//	a = a - b;
//	//异或法
//	a = a ^ b;
//	b = a ^ b;
//	a = a ^ b;
//}
//int main()
//{
//	int num = 0;
//	int count = 0;
//	scanf_s("%d", &num);
//	//32bit
//	// 00000000000000000000000000000011
//	// 00000000000000000000000000000001
//	 	   int i=0;
//	  for(i=0;i<32;i++)
//	    {
//	 	   if(1==((num>>i)&1))
//	 	   count++;
//	    }
//		   printf("%d\n", count);
//
//	//数num中的补码有多少1
//	/*while (num)
//	{
//		if (num % 2 == 1)
//			count++;
//		num = num / 2;
//	}*/
//	return 0;
//}
//int main()
//{
//
//	int a = 10;
//	printf("%d\n", !a);
//	int a = 0;
//	if (!a)
//	{
//		printf("呵呵\n");
//	}
//
//	a = a + 2;
//	a += 2;//复合幅值符
//	a = a >> 1;
//	a >>= 1;
//	return 0;
//}
//int main()
//{
//	int a = 10;
//	int* p = &a;//取地址操作符
//	p *= 20;//解引用操作符
//	return 0;
//}
int main()
{
	int a = 10;
	char c = 'r';
	char* p = &c;
	int arr[10] = { 0 };
	printf("%d\n", sizeof a);
	printf("%d\n", sizeof (int));
	printf("%d\n", sizeof (c));
	printf("%d\n", sizeof (char));
	printf("%d\n", sizeof (p));
	printf("%d\n", sizeof (char*));
	printf("%d\n", sizeof (arr));
	return 0;
}
